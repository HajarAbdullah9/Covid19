<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tablue_Table_1)' inline='true' name='federated.1czh3ag11l7imc17x19qx0fa2xfk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tablue_Table_1' name='excel-direct.1pg5oir0bk9bf811a14bf0mi0bag'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Desktop/slides/Analysis_Projects/Covid_Portofloio/Tablue_tables/Tablue_Table_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1pg5oir0bk9bf811a14bf0mi0bag' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1pg5oir0bk9bf811a14bf0mi0bag' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E399123B437A490EBAECF61693E8361C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E399123B437A490EBAECF61693E8361C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E399123B437A490EBAECF61693E8361C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E399123B437A490EBAECF61693E8361C]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E399123B437A490EBAECF61693E8361C'>
            <properties context=''>
              <relation connection='excel-direct.1pg5oir0bk9bf811a14bf0mi0bag' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table_tablue_2)' inline='true' name='federated.0esmyvn0ehsxpp1074rdn0k7prxk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table_tablue_2' name='excel-direct.0y0olga18y7zwr1fx7uvx0es3d2k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Desktop/slides/Analysis_Projects/Covid_Portofloio/Tablue_tables/Table_tablue_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y0olga18y7zwr1fx7uvx0es3d2k' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0y0olga18y7zwr1fx7uvx0es3d2k' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>false</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4B46E48C4B424AB083331343F0532DA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4B46E48C4B424AB083331343F0532DA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='totalDeathCount' datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4B46E48C4B424AB083331343F0532DA1]' role='measure' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F1:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4B46E48C4B424AB083331343F0532DA1'>
            <properties context=''>
              <relation connection='excel-direct.0y0olga18y7zwr1fx7uvx0es3d2k' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B6:no:A1:B6:0' header='no' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='integer' name='F2' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tablue_table_3)' inline='true' name='federated.13pvv7v1pwfk7g12f5qt90je0sc9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tablue_table_3' name='excel-direct.0eth4hl13202b91cqi75s1acbqod'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Desktop/slides/Analysis_Projects/Covid_Portofloio/Tablue_tables/Tablue_table_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0eth4hl13202b91cqi75s1acbqod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection' ordinal='2' />
            <column datatype='real' name='Highest_infected_population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0eth4hl13202b91cqi75s1acbqod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection' ordinal='2' />
            <column datatype='real' name='Highest_infected_population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_infected_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_infected_population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_infected_population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection' datatype='integer' name='[Highest_Infection]' role='measure' type='quantitative' />
      <column caption='Highest infected population' datatype='real' name='[Highest_infected_population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E7380C7FDE7A41A9B66A626A3B281FDB]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E7380C7FDE7A41A9B66A626A3B281FDB'>
            <properties context=''>
              <relation connection='excel-direct.0eth4hl13202b91cqi75s1acbqod' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Highest_Infection' ordinal='2' />
                  <column datatype='real' name='Highest_infected_population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tablue_table_4)' inline='true' name='federated.1byp6en10ol8cs1cehqib1u0t97p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tablue_table_4' name='excel-direct.12o5onp04yehko10h25po1yhstq7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Desktop/slides/Analysis_Projects/Covid_Portofloio/Tablue_tables/Tablue_table_4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12o5onp04yehko10h25po1yhstq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection' ordinal='3' />
            <column datatype='real' name='Highest_infected_population' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12o5onp04yehko10h25po1yhstq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection' ordinal='3' />
            <column datatype='real' name='Highest_infected_population' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0597C4FC0B584347ACF04158CD6077AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0597C4FC0B584347ACF04158CD6077AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0597C4FC0B584347ACF04158CD6077AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0597C4FC0B584347ACF04158CD6077AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_infected_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_infected_population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_infected_population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0597C4FC0B584347ACF04158CD6077AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection' datatype='integer' name='[Highest_Infection]' role='measure' type='quantitative' />
      <column caption='Highest infected population' datatype='real' name='[Highest_infected_population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0597C4FC0B584347ACF04158CD6077AD]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='sf_default' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;High income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Palau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Niue&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Low income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Wales&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;England&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0597C4FC0B584347ACF04158CD6077AD'>
            <properties context=''>
              <relation connection='excel-direct.12o5onp04yehko10h25po1yhstq7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection' ordinal='3' />
                  <column datatype='real' name='Highest_infected_population' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2C8CF15B9BCA4038BD7D286669203A46]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_83F5806B0E5D450E991FBB87A8AB2B69]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_63E98053A66047329A8F3880E6D671C1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_A9E690781D06461988C7558F553BE285]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Global Numbers</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tablue_Table_1)' name='federated.1czh3ag11l7imc17x19qx0fa2xfk' />
          </datasources>
          <datasource-dependencies datasource='federated.1czh3ag11l7imc17x19qx0fa2xfk'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1czh3ag11l7imc17x19qx0fa2xfk].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]' value='200' />
            <format attr='height' value='119' />
            <format attr='color' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='#000000' />
            <format attr='color' data-class='total' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='#000000' />
            <format attr='color' value='#d4d4d4' />
            <format attr='color' data-class='total' value='#c0c0c0' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='4' />
            <format attr='text-format' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='#000000' />
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#005500' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='center' />
            <format attr='vertical-align' data-class='subtotal' scope='cols' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' value='#000000' />
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='vertical-align' scope='cols' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1czh3ag11l7imc17x19qx0fa2xfk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{34A9C5F7-92EB-426B-B479-3EADE810979A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tablue_table_3)' name='federated.13pvv7v1pwfk7g12f5qt90je0sc9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13pvv7v1pwfk7g12f5qt90je0sc9'>
            <column caption='Highest infected population' datatype='real' name='[Highest_infected_population]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Highest_infected_population]' derivation='Sum' name='[sum:Highest_infected_population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[Longitude (generated)]' field-type='quantitative' max='33304326.665405966' min='-33304326.665405974' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[Latitude (generated)]' field-type='quantitative' max='9987625.9754036143' min='-9987625.9754036069' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' value='Highest infected population'>
              <formatted-text>
                <run>Highest infected population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='US Metro Labels CBSA' value='true' />
            <format attr='enabled' id='US Metro Boundaries CBSA' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='true' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-red-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' />
              <lod column='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[none:location:nk]' />
              <geometry column='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[Latitude (generated)]</rows>
        <cols>[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A0A6C754-3FB1-4286-8B6A-259EE0606665}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tablue_table_4)' name='federated.1byp6en10ol8cs1cehqib1u0t97p' />
          </datasources>
          <datasource-dependencies datasource='federated.1byp6en10ol8cs1cehqib1u0t97p'>
            <column caption='Highest infected population' datatype='real' name='[Highest_infected_population]' role='measure' type='quantitative' />
            <column-instance column='[Highest_infected_population]' derivation='Avg' name='[avg:Highest_infected_population:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Highest_infected_population]' derivation='Avg' forecast-column-base='[avg:Highest_infected_population:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Highest_infected_population:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_A9E690781D06461988C7558F553BE285]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]'>
            <groupfilter from='2020' function='range' level='[yr:date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]</column>
            <column>[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]</column>
            <column>[federated.1byp6en10ol8cs1cehqib1u0t97p].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1byp6en10ol8cs1cehqib1u0t97p].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]' />
              <text column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]' />
              <text column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[fVal:avg:Highest_infected_population:qk]' />
              <color column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1byp6en10ol8cs1cehqib1u0t97p].[fVal:avg:Highest_infected_population:qk]</rows>
        <cols>[federated.1byp6en10ol8cs1cehqib1u0t97p].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{67359605-F5C8-4C57-8DAE-030D0452BA4F}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tablue_table_4)' name='federated.1byp6en10ol8cs1cehqib1u0t97p' />
          </datasources>
          <datasource-dependencies datasource='federated.1byp6en10ol8cs1cehqib1u0t97p'>
            <column caption='Highest infected population' datatype='real' name='[Highest_infected_population]' role='measure' type='quantitative' />
            <column-instance column='[Highest_infected_population]' derivation='Avg' name='[avg:Highest_infected_population:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Highest_infected_population]' derivation='Avg' forecast-column-base='[avg:Highest_infected_population:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Highest_infected_population:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]' />
              <color column='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1byp6en10ol8cs1cehqib1u0t97p].[fVal:avg:Highest_infected_population:qk]</rows>
        <cols>[federated.1byp6en10ol8cs1cehqib1u0t97p].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A8E4069B-3399-477D-9D8D-3F38B0D39FF1}' />
    </worksheet>
    <worksheet name='sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table_tablue_2)' name='federated.0esmyvn0ehsxpp1074rdn0k7prxk' />
          </datasources>
          <datasource-dependencies datasource='federated.0esmyvn0ehsxpp1074rdn0k7prxk'>
            <column caption='Continent' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='totalDeathCount' datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[sum:F2:qk]' field-type='quantitative' max='2500000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[sum:F2:qk]</rows>
        <cols>[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]</cols>
      </table>
      <simple-id uuid='{22639461-21BE-41D2-A444-7DC6F5703A97}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (Tablue_table_4)' name='federated.1byp6en10ol8cs1cehqib1u0t97p' />
      </datasources>
      <datasource-dependencies datasource='federated.1byp6en10ol8cs1cehqib1u0t97p'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98010' id='3' param='horz' type-v2='layout-flow' w='98976' x='512' y='995' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='28358' id='6' name='Sheet 1' w='39578' x='384' y='13806' />
        <zone h='49502' id='7' param='vert' type-v2='layout-flow' w='62020' x='39642' y='50622' />
        <zone h='48259' id='8' name='Sheet 4' w='45908' x='39834' y='50995' />
        <zone h='20025' id='9' name='Sheet 4' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]' type-v2='filter' w='8504' x='45013' y='59701' />
        <zone h='43657' id='11' name='Sheet 4' pane-specification-id='2' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]&#10;[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' type-v2='color' w='9910' x='88939' y='52363' />
        <zone h='52488' id='12' param='horz' type-v2='layout-flow' w='39003' x='256' y='43657' />
        <zone h='50871' id='13' name='sheet 2' w='38491' x='512' y='44527' />
        <zone h='21891' id='14' name='sheet 2' pane-specification-id='0' param='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]' type-v2='color' w='9910' x='29156' y='54851' />
        <zone h='42786' id='15' param='vert' type-v2='layout-flow' w='58696' x='40857' y='7090' />
        <zone h='41045' id='16' name='Sheet 3' w='58056' x='40921' y='7836' />
        <zone h='12438' id='17' name='Sheet 3' pane-specification-id='0' param='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' type-v2='color' w='8951' x='90090' y='8458' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98010' id='22' param='vert' type-v2='layout-flow' w='98976' x='512' y='995'>
                <zone fixed-size='280' h='41045' id='16' is-fixed='true' name='Sheet 3' w='58056' x='40921' y='7836'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12438' id='17' name='Sheet 3' pane-specification-id='0' param='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' type-v2='color' w='8951' x='90090' y='8458'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='28358' id='6' is-fixed='true' name='Sheet 1' w='39578' x='384' y='13806'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50871' id='13' is-fixed='true' name='sheet 2' w='38491' x='512' y='44527'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21891' id='14' name='sheet 2' pane-specification-id='0' param='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]' type-v2='color' w='9910' x='29156' y='54851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20025' id='9' mode='checkdropdown' name='Sheet 4' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]' type-v2='filter' w='8504' x='45013' y='59701'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48259' id='8' is-fixed='true' name='Sheet 4' w='45908' x='39834' y='50995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43657' id='11' name='Sheet 4' pane-specification-id='2' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]&#10;[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' type-v2='color' w='9910' x='88939' y='52363'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C82614D-CD6D-4C54-9E5D-2BE7B43BECB4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1czh3ag11l7imc17x19qx0fa2xfk].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33B8C12B-65C1-46A2-9BC9-2C32ECC0408B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='46' type='filters' />
            <card size='207' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]' type='filter' />
            <card param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]&#10;[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' type='color' />
            <card param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[none:location:nk]</field>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]</field>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]</field>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC6F94D4-A0E2-4F65-B841-A74CBE60FBAF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[sum:Highest_infected_population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13pvv7v1pwfk7g12f5qt90je0sc9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8ED18906-5D57-497A-BA8A-A34262F17568}' />
    </window>
    <window class='worksheet' name='sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[sum:F2:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{808409E7-7E6A-4CE6-829A-02E8A284DD5C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]'>
            <color-one-way>
              <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]</field>
              <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]</field>
            </color-one-way>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0esmyvn0ehsxpp1074rdn0k7prxk].[none:F1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{67281F95-1A65-4457-80D5-DCBF9285D708}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]&#10;[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:Forecast Indicator:nk]</field>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[none:location:nk]</field>
            <field>[federated.1byp6en10ol8cs1cehqib1u0t97p].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{850C07D6-51F6-448B-8E6B-CC858E3524A1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='143' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      Pc2o1o8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      /8xws2CY8s9qAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAfMUlEQVR4nO3deXCc933f8fdz7X3gXNw3eAIET/ESReq2lTqO62TaOJPWbRq348iTZpyO
      ZzKd2k0904ydGY/TK6k1btrEdSeZRG2VurFjWzLF+xIvkASI+wYWx97nc/UPQCAl0sHK3SUJ
      7u/1hySsdp/nt8Dz2ed59vl9n69k27aNIJQhSZIk+XEPQhAeJxEAoayJAAhlTQTgCWXbNno+
      RyaTxTCtQl6Bns9jrZ3SDQ4P/6wrJn/fcp52IgBPqJHLP+A3X/88v/H667x58lYBrzD41pe/
      wp1oGgCnw/GzrdjS+ca//ZdMrOR/ttdvMurjHoDwEEaUb//X/8Pr//ob7GzwkckaxGbv8PWv
      fZNFu4LXv/glGo1hvv2XpwhP3EHteI4vvNrIWxfO8/bnf51PfvaLbK+F9no/3/zmG+jpJe4s
      mPzO736VWmOSb/z+H7Cs1PPFL/029vDb/PmZu0wN3GL787/MK60xfvTuJa4M/GN+5Te/yt89
      2vW4fxslJfYAT6LoLCvVW+lpqkCWVbwehe/+4Ru8+E//Fb/7+dd4443vks8kiNtBvvK1r+Mc
      uYG84xifOHiQr/y7P+JXX91PIpEA22B2fplf/Ge/w68cDXGuf5z/9Z3/zrHPfonf+Pkd/MVb
      J0nHl5Frd/J7X/sqc/3vUL//k7x4bD+/9wdv8MnDnY/7N1FyYg/wJPIG0JbniOYsKp0yoLMY
      0/hUdwP1sowSP40O1DW3E/T78GkSpiQjSzKKpqIo9z7XtECI1lAFiz4fRj7LcjRJ/vo5VpQ8
      jTV1wDLNbW34PF4cDkCSkWUZRVVRZOkx/QIeHRGAJ5G7kU8equLLX/439LTX0LTzOM8/28jX
      v/o1QtIyzQc/zoNH+CqNLSp/+p/+M5/4xKcevlzZyTN7Ovle/wRd9X5c7oecXEsKtU74b2/8
      IZ/4xc9wYEtdkd/ck0USV4KfTLZlMHz7GtNLGXbs2U990MGtKxeJ2n4O7OvBSi4yHYMtrTUM
      Xr1Fy+5etEyMS1euE+rchd9hUlcdpH9wgp07thCdHSWu1tJW4+LWtSsspmx6+vbgzC4Skytp
      qXJxe3CQLdt3YSQXuHL1Nm09B2it9T/uX0XJSJIkfSAAw8tx4rkn++y/weemIeB93MMQngKS
      JEkfOAS6sbDCWCT5uMZTkKNN1SIAQtGIb4GEsiYCIJQ1EQChrIkACGVNBEAoa0UPQHZ5iuGz
      7zA/Mcv737Dalsl8/3tkMqtfsabmhxk5f5ZUKgeApaeYunKK2dEpbMDIxkmufRuVWZolmcwW
      e5iCABQ5AEZiifBcgo5Dz2HNvsfCYgaA5NRN5oZGSaZy5JZGmRheoXXPTibO/QRd1xk/8w7+
      rv2oyRFmRucxUktE5yOY2SgTN+/gdDmLOUxBWFfUAKj+Glp7dyJLNroBmiZj52PMTWVo6Fi9
      pJ4Mz1PdtQ3NVUFFwEkyHieveglWeKjp3E5yaXZtaTazVy9Qt/comvr0z0kRHo+izwUy0hFG
      zryLf8tBqioczL13kVDvAfLjVwAwTQNZUQBQJBnDNAGQABQVyzAAk3D/JSRfFY0BFwALQwPE
      F2bY/uwh8o3VxR62UKaKGgBbT3D31Gnajr2G1+vAyieJLsyTzJwjOT2CNG/Sui1IJpGAWg8Z
      I0+t28OKaWFaNmYqgcPjAxRCvUcJupYYuzlEV99W6rZsp27LdqqaqnH8rMUegvAhRQ1AdnGc
      VDLD7NVTAIR2PcvOn/t7ACzecCM17qIyACtnTzE4LaMGWnD7vIQaggye/CG2adF26AXQ55Ak
      CV97H/FL77C0EKK2vqKYQxUE4EOzQd+8Pb4p5gIdaW943MMQngLivkBC2RMBEMqaCIBQ1kQA
      hLImAiCUNREAoayJAAhlTQRAKGsiAEJZEwEQypoIgFDWRACEslbU2aBWPsnU1Uvk8iaGodB1
      7DjZmTssTM5jmwa+9j4aW6qYuHiKnG7iqt1K685OkpO3mB6ZAUmh/fAJ5Ow80RWVuo4QC9fP
      4+zYS0XQXcyhCgJQ7HoAW6Fhz7NoDo34wEnCC0lqq1rZ0tYDdprbb18gIFUi1exg65ZGxs78
      iEyqjtmRGbqPv4K5PMzM3RGamjT0nE1m/i5xM0j3WlGMIBRbUQOgON0o2GQWJ5iaztF93IfL
      qWCbeaYunsbf1kMmOYontAVJkvE6XaRSKWxNQ1MkVF8lueQYUMnK8HUiLgfbX3wFSZJYnhgl
      uRymR92L3lRTzGELZay4JZG2xcrdyyyETbaceAmHQ8FMLXP3zFlqdh2hpr6a5dsTWPbqbbkt
      bFRZBiRswLYtJFkGZALNnRjRMbIZHc3nINjQhK+2Dl91Laoq7uouFEdRtyQjPsNc2Gbnc0dW
      a3yxmLp6kYaDL1NRsXoM76sNMTkxTnVlF/FUno5AgKiZIZnKYcyM46tpBPKoLj8tBw8yePE0
      3cdO4HA4UR1OFFVDkkSRvFAcxT0JtmVUM8rw6R8DENp1CM3pIXzzLIsSaJXNtO3spiZxi9HL
      lwn1HERzOGjdd4Dpm+eQfXU072jCyq7gq1JQvEHatreRjqdwVAeKOVRBAERJpFDGREmkUPZE
      AISyJgIglDURAKGsiQAIZU0EQChrIgBCWdu0cwquL0+TX7uzdLE0eoM0ecU9SMvJpg1APJ8j
      bxlFXWaVKfoPlxtxCCSUNREAoawVPQB6KsLS2BDxldhqkzzbJD47TmQ+jLU27SgfX2JpfIx8
      bvUQxjbzRKdGiC1FsAFLz5JLrzbQ05Mxcjm92MMUBKAETfKmB4aQNQdL198lEsuzeOscK8tp
      0jO3mRmdw0jMMXLlJhJZRs6fwzQtZi+fJJmxidy9xOJclHx8lsWJMLaZY/zSOUyrmKMUhHuK
      WxHmq6Z9XzVgoc8PoufSxBdztB/fgUoLA+9eI65rVGzdQ3VjBZnwT0jGYyTyKtu2dGHVexi+
      O06gIwDYhG+cIbD9CG63VsxhCsK6ogZAkiRsM8/k+bcxfG10VDuJWgqSIiHhwDbT6HkXqkMD
      SUJDIafnQbKRJAlFc2Dm8thrTfJsbxX79gaReFiTPHuj4XxklmmSz+eLvlzhyVXcongry/A7
      P6Cq7wRVtUEkDFTVxDJsbDuDpPlxujXSmSzYXvK2QdDpQrIlLNvGzGVR3S4kFEI9R3BbE0wN
      z9HS1fCQJnnFrwqTFUU04CszRQ1AbmGERN6Bb3mK+eUpgm3bqGoMMHHlIqoRp6JrD/4qifkL
      V7FiQTKWn0a/nwq/wvi1q1iJRWp6ngXCIElU7TxC/MzfEK3yU1nlK+ZQBQEocgActd1sPVi7
      fnCiaQqe7v244xEsyYHb70OSJLqPHCGbylIfrESRZUJ9R8nEokjadlw+D5hO6v0SkqzSdvhF
      TFsp5jAFYV1RAyCrTnw1oQcedwU/2Nhadfnwue59okuyiqfyvludKBrq2jYvay5xsUIoGbFt
      CWVNBEAoayIAQlkTARDKmgiAUNZEAISyJgIglDURAKGsiQAIZU0EQChrIgBCWStyhxibzMo8
      c0MDNOx9AbcTsiszzA7exUIjtGMv/oCD8J2rxCJJKtp6qW0JkVueYnpgCMlVQWvfbsguk4gr
      VDVWERm5hRLqIhAQTfKE4ivuHsDIEI8kUKUcugGgM3Ojn/o9z9G+u5vpazfJzA2RyAfoPnyU
      6MhVctksU9f7adz/HLVVEjPDk5j5JOl4Gj0xy/x8Aq9PNMkTSqO4ewDNQ133VsKp6fXFeytc
      rEyN4zAjeGpDpCKzBJp2I6suAl43yUQC0+nG7dKgrpmZGxMQqiSzMs/o7CIdx19DkSUysQj5
      dJpchRPTNClFRZht22vLFspFaW+MZVsgObDzWQxsJGl1w5U+XM1l20isbdJr/zCySSwDJNsG
      JPRcjlwqgaHnua+pTZHHa5du2cITqbQBMLNEFpN0PX8I1c5w+51T1OxsIRxeoKbGQSqbo8nn
      I2LoZPMm5koYV7ASkPA3dhMKWYxcvMjWo4cIhOoJhOrxVlStdYksfkmkJMuiA2WZKepf20xH
      mbx+hdTKEkrkx+S376NpazMT59/BtiXqeg/gqQvgCF9k6PQovpadON1umnZ0M3nhHSTVS+v+
      7UjZME6viqO6hrq6ZaJLcapDwWIOVRCATdwk79TcSNHvDdrur6YrIJpwlwvRJE8oeyIAQlkT
      ARDKmgiAUNZEAISyJgIglDURAKGsiQAIZU0EQChrHykAmfCCmCwmPFUKDoCl6yz39xMfHxch
      EJ4aG06GM/N5UtNTpMNhcokE+uAAskPD39T80Ofbto1l6MiqA0kCsDH1PJZpoTicyLKMZeiY
      hrn2s4RtW5i5HCgaiqaCZWHbICsylmmAJCPLj/ZobTGd4X/eHS76cj+1tYuQx1P05Qo/mw0D
      oDgc5JMJUgvzOCoqaTxyFOWndVExcyzcuc78yF06X/5VAl7ILk4wMTCKw+XE17SNqkqZ4XMX
      0DwuDAJ0H9zL8q2zrMQtrGyShr0ncNkLLIU1mrbVM3H2bap3nyAQeLRVYZZtk8gXvzulZYm9
      55NkwwBYpomNhLe5BdXt/ukbP4AkU9G5C9l8f0apycLwKK3PnMDtWr3hf3ToEt7O/TS31TJx
      /m1SiSTLKzm2HH8RKzLJ+MQYLa2rn5Dx4feQ63vxP+KN/1EZiyQYiyaKukyHInOstb6oy3ya
      bXwIlMtRvWMnkqpibtRATtZweTTi6y/OE59bIM8pjHQCR+1WfFIaZ4UHJAmXopHJZUGRUCQJ
      2e1FTy9g4yTcf5mwv4q9H2t8LE3ydKM0vYl1w1hfx5XZMH81NL3BKz6agFPjYH1VUZf5NNsw
      ANp9x6uq0/nRli4ruCpraHvmBA7F5vbbf01lUzX51Yp5DCy8qgrIqw2yDR3Foa01yTuEnBwk
      PB+nriH4yJvkaXpxaw3ep6nq+joUpfitnyQQjf4+gsLOLG0b27LWv/2x7dWT1AeeZhpk4xFy
      6TS5RARdl6iq8zF7d5jE3BCyK4S/oZnIUD+J8CSJjIQvGMQr5wlPzzM/eIeKxrbVhUky9Xuf
      I3bnDKlUrljvVxA+oLAAmFlu/uAtcrnVT8WZs2+xEE498DTLyBCZGkXyNpALj5JOZqnecYhK
      n0UiIdF1aB9asJmO3g7iS3HaDx5FVRSaDx5HSoVxNvYSaqpC89dR3VyNrLnpOHgYLHGnBqE0
      Nq4JzsUYvXyB6Rvvobr9ODSJ6QsX6e545YGnKk4/DT37H3g82LqN+yt6XdVNNFU3rf8sqS5C
      2/ruLcfhxb22F9d8VYg+8UKpFFAUL60eG7vdyIqCrCp0//znaGr0ln50glBiGwfAGaD90PO4
      vW6iKymMnIExN0Kspp6KSnG7QmFzK+wcwMgydPoksrcKX20dvto6NIdoXi1sfoXdF0h1UhUK
      4WvsIFS72uBaUsSRubD5FRYAU8e0dQa/9x2GldWdRvfH/yENjYFSjk0QSq6wACguej7169j3
      XX2VZXELQWHzK3APkOX29/4HkaUU2CbpWIK+z/xzsQcQNr0CzwHc9P7Cr639YHHzu/8B1SO+
      ARI2v4LPAWb7L5FO5gCblYU5AoksVIgTYWFzKywAkoTDG8CSV2dI7vj069Q0+0o5LkF4JAq7
      DiCrBOsbyEVmWZqcxLAkZKn4szEF4VErLACWzsBffZeMVkdbz1aG3vovLEUfUhtg21h6lvDg
      dXL3Tae3LZ3pq+dJp/PYtkV8aoDhc6dJxNLYgJmJMXnpXaYHR7EsGyMTJbEUB9smNT9BMpEp
      zrsVhA8pMAB54gmdxm07qGjbSnWtk2T0IRulkWa6/xqxuQly9+UjPn6Tpak5UukcuaVRZqdS
      tO/rY/ryKfS8zvj50wS3PYPLmGVmbA4jvUJsMYaZiTA1MIrL83RWhAmPX4HXATxsPdjHe9/5
      92gOBdvbyraWh3wFqnlp3XuY8PW31x+ycxHm53TqW1cbTyQXF6js3IXqDBD0u0gm4uial0DA
      jd22hbu3ZqitqAAspq9epGHfC6iKONwSSmPjANg6szduUNPzIi/1vYBl6CwO3MSwQNtgOpBt
      m8zcuE5D32GyI5eA1bLD9+/woEjSesdHCUBRsEwTMAn3X0L2VdLkXZ0X/TSWRJaiI6UN68sX
      NrZxAJIz3Dh7g1f79iNJoDhkondPkfZtobOz4m99qa1nSUZWSF8/Q3J6BGnepG17kFQ8DrUe
      MnqeWo+HFdPEsGzMZByH1wcohHqPUumLMnb9Dt17d4qSyAKJksiPZuMAuPw4s4vE4hkqAi6s
      fJxoOEWb/8Hj8veb5MVmx1FXfkz9jn1sf/XTACzd8iE19FDpl4icO83gzA0cVR14vF7qW2q4
      e/KHYEu0HT6BlJtDURU8zT34Ft9laaGR2vq/PWyC8LPYOABaNbteOciNP/sWqtOBmc/i3/4K
      9bUPBkDxVNBx5KWHLqam59D6f3cd/9gH/l+wcw/Bzvse8LTRULn6nw37nt9wiMLDJXM6txci
      RV9uT30lXsfTcRG0oJPgmp4TPNt1gGw6g+Jw4/J6wbZBXAt4ok1EkvzW/z5X9OX+8S+fYFvt
      07FHLnBKp8XC9VPMTC4iyxIg0Xr8U4RC4mqwsLkVPBt07MYdtnz87+P1rp6AOgNiMpyw+W0Y
      gHximVQ8SSDgIrYSw6GsfuprvqdjFyiUtw0DkJofY3JwHHwhMtO3mVy7k1/T4ddwOkVRjLC5
      bbgFV245QGXnLkavXKZ5z2EcDoXF/tMoqtj4hc1v47lARpbl8SFGzp0kPDrE0tgQY2d+RCwm
      blcobH4bf4zrCaZvXiUTjzJ74zKqJuPe9hLNzf5HMDxBKK2NA+CuZfcnP0PL/qPIqgtp7bt/
      yzBBEYdBwuZWYEWYTfjKO4TDUWzNT2phjgO/9i/EdQBh0yu4JnhlKcXOVz/GyqJCzvl/SaVK
      M1lMEB6lwgpiVDfbT7yAo6INOXqTlNpKfWPwoU+1bYv4/CTGWj5sS2dl9A5zQ0Po+ur03+zK
      HHMDt8lmV6cc20aWpaFbLM8trlaI5dNkkqsFN/n4MtmMmN4rlEbBrReDzW1EBi6jNu2mubOd
      h94ZUU8xefk009cvks4BWCzevoap+fG4DIbOX0aPTTN2YwhPhZux82cwTJPpiycxnBWkp66z
      ML2MnphneWoJS08zfuUyPOIOkUL5KLgk8uZf/jGxNCSWFomPvsv8TPrB52le2p45Ts16jyqZ
      UO8z1LY04Q74wbZJzE5RubWPYH0Hfo9NMhYjZTqoa22icUcPsbnJtdfaLFw/R2XPUVzigptQ
      IoVtWZZJKmWwrXcPkfE7ZLL5j9QsOz5xk8mhMB1HniM5cn61FzCgoZA3dJBWK8IUVcPM69hr
      FWG2t4p9B1a/bhUVYYW5vyLMKNF7MHTjqak6K7Am2E3vyy9w7c1vo+d0/O376GkppEGGTWz4
      MnMrLnpeeglJkjA8PpLpDNhecpZOpcuNZElYto2ZTaN5PKtN8nqP4pOnGR+YpH1bq6gIK9D9
      FWGqWpo5+6qmPjVVZwUFwDKypBJZart2oPpqaN69F+UhtQBmNsH83TusjI3jyFzE2tLN7K1B
      nI1bmLp2CTUQoq6pg/lzFxkLe9DlSrw+H1WVDoYvnMXOJKjbcxyseQCCW54heu6HrCxXUF0j
      7kMqFF8BRfEmt9/8Fin3Fjp6t5Gc7Ofsn/Tz3Of+Cc4P3a1Bdnio6dpBTecOABSnm62vfnp9
      Vy+pGorLxZbnXkDPG2guN7IsU9N7hGAmjaQ4UJ0OsNpoCIIkK7QefhnbFifBQmlsHID0DDML
      Tl78ws+hyRDq7CI9+/vMTSdob/vgp7IkKzi9H5oioakPrETWnDi1ez2HJUnG4bnvopqssNaG
      AFk04hBKqIC5QDnyVo7FwRvrD2WzBs7c03ESJJS3guYC7TjQS3IxvP5QoPsQtSHRJVLY/Aro
      EllB97GH3+lBEDa7DQMQvvYjBq/ceeDx7tc+KzrECJvehgGo3fUC1T0nHnhcElOhhafAhlux
      pCgossTc5e9z++x7WJKKmcux6zO/RVPzwyfECcJmUdjHuJFm+L0B+j7+Kimtndj5P8ft95R4
      aIJQeoVdYVI03E4NyxUkdvsi6ViYRCxb4qEJQukVWBHmoO+X/gFoXhxGjlhLBy0toiZY2PwK
      2wMYGW7+6PuYFlR29SFFbjI/lyzx0ASh9DbeA2RXuPPuT5i7fR1Fc6GpEvP9N9m54xcewfAE
      obQ2DoDipKKhGV/1BMGGFhxOhdqdz1Bb95B7g9o2qfAks4MDNB38GB4X6PF5Jm7cwkKjae8h
      PC6JuZuXSCYy+Jt3Ut/RSGZhlJm7Y6stlvY9g5RdJB5TqGmuYXnwGlrDdgJBcS9Sofg2PgTS
      vDT0HmD/33mN6OgNxq9cIhpeeXg9ipEhnbVxuyUME7BNpq9fo273s7TvbGGqf4D03F2ySh3d
      R4+TnOonl8kwffsuLYeep6HRy+zQOJaeJpvMko9Mshgx8AVEkzyhNAqsCNMZ+JvvUXPsl+hp
      8PHen/5H5lq6aAx96FNZ81Db1k44Orr2ujy67sLtc6FKDdjJUdJRB/66vciKA7/bRTKZxNJc
      uBwKdk09UzMTUF9Bcn6CxEyCzuc/jixJJJbCZBMx0j4Z0wxRioow27LWp26XoloLwLxvHbZV
      gvfAvbFbVmneg2VaJfv9PGqFnQTbFoZp462oRPMGcLkVjLxVvFE8UFsjIasKtmVhmasbiawo
      qJoTuQRVVA8bh1Si5h+PtqVIidb2FPVFKbAk0kXvKy/z3l/8EbeQ8HYcpbmpgAthshOnK0c6
      nsGpz6IE6/BWKczNzVBd1U4ik6PV7yeq58hkDYzwLJ7KGsDCU9NMXWMrQ+fPsvXYUbyV1Xgr
      q3H5AmulhMX/K0iSvF6mKJfoThSyfG8dklyC9wCP9D1sdgUeAhmk8g6e/dxvIysSick7pNMm
      Pu8HX/5+k7x0LIoc/TH5bfto6tvH5I1zmJKLlj3P4HKCd/kKw+enCXb04XC5aO7dwfTld5Fc
      AVp2tyJlF3H7FbRgNY2tK8RXElTVimkXQvFtHADLIBdf4vbbf83eT9fhdquMn3oL/7Ofx/eh
      Nqk/rUle59EXP/Bz/a7D1N/3s6umle5jrfce0OqoXrvOVtGxq+A3IwgfVQElkWEuv/lnRKcn
      ufbmn6AoEmqwm20t4hNZ2Pw2DoCvkWf/0ReYHRqktmsH2kbt4QVhEynwJFijcXtviYciCI+e
      uN+IUNZEAISyJgIglDURAKGsiQAIZU0EQChrIgBCWRMBEMpayQNgWybZeIRMPIG11lXGzKVJ
      RyOYhnXvObEI2XQGG7BNA2OtQYWZz2IYT8fcc+HJU+Lbu1mE+8+RMlyoZhLL20pLe4Ch81fw
      VgVIpxW6Dx9g6cZpkoYHM7lETe8xPNIiS2GNpm11TJw/Se2+5/H7xBQMofhKvAewSKykaOzd
      R3NfL+nwAonpUfzd+2nZfRi3nCSdSBCJm3TsP0DHnl6WJsfXXx0ZuIzWsgefz/nTVyEI/x9K
      vAdQCbXVMfTO95HtPDV9z5Fb6sdR6QJJwimrZHJZkEGWJGSnGyMzh42LcP8l8FWx97U6JEST
      vEKJJnkfTWkDYGZYmFxhy/OvotpJhi5co67eTT6/+ofRMfFrDkDBBixdR3Foq03yeg6jpoeY
      n47Q0FwpmuQVSDTJ+2hKewgkqch2jujcDLGZCWzZTaCxlcjQdVam7pLMafgCQfyazuzIGDO3
      b1HV0rH2Wpm6vcdJDp0lkRC3YRRKo7R7AFmj89gLRKYnMdVKth5tRlVkOvcqxJbidBw8jKLI
      NB54jsjUBHLXPoK1Fdi6kxqXhKQ46Dh0DL34RzuCAJT8HAAk1UVV+9YPPOYMhggFQ/eeozg/
      8BxJc+Na23urnmDpBymULXEhTChrIgBCWRMBEMqaCIBQ1kQAhLImAiCUNREAoayJAAhlTQRA
      KGsiAEJZEwEQylrpSyJNnfCdywyfPUVsJYFtm0RGbzJ89l2iS3FsQE8uMX7hJJO3BjBNCyO9
      QiwcBdsmMT1CIpEp9TCFMlXiANgsD1zC8LTQeegQTqdKNjxCeNGi48A+5m+cQ8/lmbh0geqe
      w/iUCDOjsxiZKInlBEZ6iZmRGdwe0SRPKI3STrS0dSLzMZzVY4zOj9HYu5f00iKVbbtQHD6C
      fhfJRBxD8+LzObFbuljon4KqSsx8lqkr/TQfeBlVkTB1Hcs0sUwT27YpRUUYtr22bNb/XfRV
      3L/sEk3zvjf2Uq2gdL+fR620AbBMcqkMDYdewGnHuHPuNPV1GtJa7yoZCdOyAHu1vkuSsU0L
      MImO9YPLQ7NzdYiRmQkSiwvEvfsxWutKM1zLwjDW7kZRqi6RprG+DssqYqPBNTY80vew2ZU2
      AIoTb4UHSVHQXFWo5HEHqolEo1DrIZ3PUef1smIYGJaNkYzi9AUAheptB6gKJhm9epOtB/qo
      ae+mpr2bivpqNE2jVCWRq8sGVS1NPa2qqOvrkJXiH4FKsL58RSnNn1dR772Hza7EtSYyzXt2
      M3r+bZBsKrfuw9cYZOnCKQbn+nGFtuL2eGjsbGTo5A9BUmg/fAIpO4fqUHE3bKdy6QxL4Si1
      dRUbr04QPqKSF1tpgQa2vdDwgcc6nn3lAz/7W3vY0dpz7wFXC/Vr23uo71iphyiUsf8H/26V
      Vvu7KPYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
